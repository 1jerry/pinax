.. _ref-media:

====================================
 Media Handling
====================================

This document explains how Pinax handles media files across external and 
internal applications and themes.

Basic media handling
=======================

If you want to override default media files, place yours under 
`<project_name>/media/...` with the same path. For example:

Original file::

    src/pinax/media/default/pinax/images/logo.png

Your file::

    <project_name>/media/pinax/images/logo.png
    
    
Locations of media files
=========================

If you want to use Pinax' media handling with your own Django apps, please
make sure you put the media files like JavaScript, cascading stylesheets (CSS)
and images in the following directory structure::

    <app_name>/media/<app_name>/(js|img|css)
    
Doubling your `<app_name>` is required to prevent name collision of media files
while deploying.

Site specific media files goes to::

    <project_name>/media/siteExample.js
    
The special static file service view should be able to serve the media files in
development. 

build_media management command
================================

The build_media script should be able to collect the media files from Pinax and
all the apps and arrange them under the `<project_name>/site_media folder`. 

The command::

    <project_name>/python manage.py build_media
    
will collect the media files from Pinax and all the apps and places them in the
`site_media` folder.

If you have two apps with the same file and the same relative path it's advised
to use the --interactive option so the script will prompt you to choose which
one to use. This is useful in case you want to overwrite default media files
with your custom app for example. Remember to remove the site_media folder
before you use this option or the script will prompt you for each file.

Please also refer to the help of the build_media management command by running::

    <project_name>/python manage.py build_media --help
    
Serving static files during development
=========================================

Pinax provides the static file serving view staticfiles.views.serve to handle the app
and theme media. Make sure your projects' urls.py contains the following
snippet below the rest of the url configuration::

    from django.conf import settings
    if settings.SERVE_MEDIA:
        urlpatterns += patterns('', 
            (r'^site_media/(?P<path>.*)$', 'staticfiles.views.serve')
        )
